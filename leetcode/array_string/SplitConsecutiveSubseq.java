import java.util.*;

import org.junit.Test;
import static org.junit.Assert.*;

// LC659: https://leetcode.com/problems/split-array-into-consecutive-subsequences/
//
// Given an integer array sorted in ascending order, split them into several
// subsequences, where each subsequences consist of at least 3 consecutive
// integers. Return whether you can make such a split.
public class SplitConsecutiveSubseq {
    // Greedy + Hash Table
    // time complexity: O(N), space complexity: O(N)
    // beats 46.07%(55 ms for 180 tests)
    public boolean isPossible(int[] nums) {
        Map<Integer, Integer> count = new HashMap<>();
        Map<Integer, Integer> streak = new HashMap<>();
        for (int x : nums) {
            count.put(x, count.getOrDefault(x, 0) + 1);
        }
        for (int x : nums) {
            if (count.get(x) == 0) continue;

            if (streak.getOrDefault(x, 0) > 0) {
                streak.put(x, streak.get(x) - 1);
                streak.put(x + 1, streak.getOrDefault(x + 1, 0) + 1);
            } else if (count.getOrDefault(x + 1, 0) > 0
                       && count.getOrDefault(x + 2, 0) > 0) {
                count.put(x + 1, count.get(x + 1) - 1);
                count.put(x + 2, count.get(x + 2) - 1);
                streak.put(x + 3, streak.getOrDefault(x + 3, 0) + 1);
            } else return false;
            count.put(x, count.get(x) - 1);
        }
        return true;
    }

    // Greedy
    // time complexity: O(N), space complexity: O(1)
    // beats 90.89%(10 ms for 180 tests)
    public boolean isPossible2(int[] nums) {
        int prev = Integer.MIN_VALUE;
        int streak1 = 0;
        int streak2 = 0;
        int streak3 = 0;
        for (int i = 0, cur = 0, n = nums.length; i < n; prev = cur) {
            int count = 0;
            for (cur = nums[i]; i < n && cur == nums[i]; count++, i++) {}
            if (cur != prev + 1) { // discontinued
                if (streak1 != 0 || streak2 != 0) return false;

                streak1 = count;
                streak3 = 0;
                continue;
            }
            if (count < streak1 + streak2) return false;

            int tmp = Math.max(0, count - (streak1 + streak2 + streak3));
            streak3 = streak2 + Math.min(streak3, count - (streak1 + streak2));
            streak2 = streak1;
            streak1 = tmp;
        }
        return (streak1 == 0) && (streak2 == 0);
    }

    void test(int[] nums, boolean expected) {
        assertEquals(expected, isPossible(nums));
        assertEquals(expected, isPossible2(nums));
    }

    @Test
    public void test() {
        test(new int[] { 1, 2, 3, 3, 4, 5 }, true);
        test(new int[] { 1, 2, 3, 3, 4, 4, 5, 5 }, true);
        test(new int[] { 1, 2, 3, 4, 4, 5 }, false);
        test(new int[] { 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7 }, false);
        test(new int[] { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11,
                         11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
                         11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12,
                         12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13,
                         13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
                         13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14,
                         14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                         16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
                         16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
                         17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18,
                         18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19,
                         19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20,
                         20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21,
                         21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22,
                         22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23,
                         23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24,
                         24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25,
                         25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26,
                         26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27,
                         27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
                         28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29,
                         29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
                         29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                         30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31,
                         31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
                         31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 32,
                         32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
                         33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 34,
                         34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35, 35,
                         35, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36,
                         36, 36, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 37,
                         37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 38,
                         38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39,
                         39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
                         39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
                         40, 40, 40, 40, 40, 40, 41, 41, 41, 41, 41, 41,
                         41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 42, 42, 42, 42,
                         42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43,
                         43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44,
                         44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 45, 45,
                         45, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 46,
                         46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 47, 47,
                         47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
                         47, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
                         48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 49, 49, 49,
                         49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
                         49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
                         51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51,
                         51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
                         52, 52, 52, 52, 52, 52, 52, 52, 53, 53, 53, 53,
                         53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
                         53, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
                         54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55,
                         55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56,
                         56, 56, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57,
                         57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 58,
                         58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
                         58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59,
                         59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 60, 60, 60, 60,
                         61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
                         61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62,
                         62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63,
                         63, 63, 63, 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 64,
                         64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
                         64, 64, 64, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
                         65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 66, 66,
                         66, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 68,
                         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
                         68, 68, 68, 68, 68, 68, 69, 69, 69, 69, 69, 69, 69, 69,
                         69, 69, 69, 69, 69, 69, 69, 69, 69, 70, 70, 70,
                         70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
                         70, 70, 70, 71, 71, 71, 71, 71, 71, 71, 71, 71,
                         71, 71, 71, 71, 71, 71, 72, 72, 72, 72, 72, 72, 72, 72,
                         72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72,
                         73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 74, 74,
                         74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75,
                         75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
                         75, 75, 75, 76, 76, 76, 76, 76, 76, 76, 76, 76,
                         76, 76, 76, 76, 76, 77, 77, 77, 77, 77, 77, 77, 77, 77,
                         77, 77, 77, 77, 77, 77, 78, 78, 78, 78, 78, 78,
                         78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 79, 79, 79, 79,
                         79, 79, 79, 79, 80, 80, 80, 80, 80, 80, 80, 80,
                         80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 81, 81, 81,
                         81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
                         82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 83, 83, 83, 83,
                         83, 83, 83, 83, 83, 83, 83, 84, 84, 84, 84, 84,
                         84, 84, 84, 84, 84, 84, 84, 85, 85, 85, 85, 85, 85, 85,
                         85, 85, 85, 85, 85, 85, 85, 85, 85, 86, 86, 86,
                         86, 86, 86, 86, 86, 86, 86, 86, 87, 87, 87, 87, 87, 87,
                         87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 88, 88,
                         88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 89, 89, 89,
                         89, 89, 89, 89, 89, 89, 89, 89, 90, 90, 90, 90,
                         90, 90, 90, 90, 90, 90, 90, 90, 91, 91, 91, 91, 91, 91,
                         91, 91, 91, 91, 91, 91, 91, 91, 91, 92, 92, 92,
                         92, 92, 92, 92, 92, 93, 93, 93, 93, 93, 93, 93, 93, 93,
                         93, 93, 93, 94, 94, 94, 94, 94, 94, 94, 94, 94,
                         94, 94, 94, 94, 94, 94, 95, 95, 95, 95, 95, 95, 95, 95,
                         95, 95, 95, 95, 95, 95, 95, 95, 96, 96, 96, 96,
                         96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
                         97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 98, 98,
                         98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 99,
                         99, 99, 99, 99, 99, 99, 99, 99, 100, 100, 100,
                         100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
                         100 }, false);
        test(new int[] { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                         10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                         10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
                         11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
                         11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
                         12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
                         12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13,
                         13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
                         13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14,
                         14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
                         14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15,
                         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                         15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                         15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
                         16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
                         16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17,
                         17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
                         17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18,
                         18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                         18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19,
                         19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20,
                         20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
                         20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
                         20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
                         21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
                         21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22,
                         22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
                         22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23,
                         23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
                         23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
                         23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24,
                         24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
                         24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25,
                         25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
                         25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
                         26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
                         26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27,
                         27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
                         27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
                         28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
                         28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29,
                         29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
                         29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30,
                         30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                         30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                         30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31,
                         31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
                         31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 32,
                         32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
                         32, 32, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
                         33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34,
                         34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
                         34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
                         34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
                         34, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
                         35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
                         36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
                         36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 37,
                         37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
                         37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38,
                         38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
                         38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
                         39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
                         39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 40, 40,
                         40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
                         40, 40, 40, 41, 41, 41, 41, 41, 41, 41, 41, 41,
                         41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
                         41, 41, 41, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                         42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
                         42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43,
                         43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
                         43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44,
                         44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
                         44, 44, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45,
                         45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                         45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                         46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
                         46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
                         46, 46, 46, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
                         47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
                         47, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48,
                         48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
                         48, 48, 48, 48, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49,
                         49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
                         49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
                         49, 49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 50,
                         50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
                         50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51,
                         51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51,
                         51, 51, 51, 51, 51, 51, 51, 52, 52, 52, 52, 52,
                         52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
                         52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 53, 53,
                         53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
                         53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
                         53, 53, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54,
                         54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
                         54, 54, 54, 54, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55,
                         55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
                         55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56,
                         56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
                         56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57,
                         57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
                         57, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58,
                         58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
                         58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59,
                         59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
                         59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
                         60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
                         60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
                         61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
                         61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62,
                         62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
                         62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 63,
                         63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
                         63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 64,
                         64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
                         64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
                         64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 65, 65,
                         65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
                         65, 65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 66,
                         66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 67, 67,
                         67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
                         67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 68,
                         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
                         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 69,
                         69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
                         69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
                         69, 69, 69, 69, 69, 70, 70, 70, 70, 70, 70, 70,
                         70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
                         70, 70, 70, 70, 71, 71, 71, 71, 71, 71, 71, 71,
                         71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
                         71, 71, 71, 71, 71, 71, 72, 72, 72, 72, 72, 72,
                         72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72,
                         72, 72, 72, 72, 72, 72, 73, 73, 73, 73, 73, 73,
                         73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
                         73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 74,
                         74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
                         74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
                         74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75,
                         75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
                         75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 76, 76, 76,
                         76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
                         76, 76, 76, 76, 76, 76, 76, 76, 76, 77, 77, 77, 77, 77,
                         77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
                         77, 77, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
                         78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
                         78, 78, 78, 78, 78, 78, 78, 78, 79, 79, 79, 79, 79, 79,
                         79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
                         79, 79, 79, 79, 79, 79, 79, 80, 80, 80, 80, 80, 80, 80,
                         80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
                         80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 81, 81,
                         81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
                         81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
                         81, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
                         82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
                         82, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
                         83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
                         83, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
                         84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 85, 85, 85,
                         85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
                         85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
                         85, 85, 85, 85, 86, 86, 86, 86, 86, 86, 86, 86,
                         86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 87, 87,
                         87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
                         87, 87, 87, 87, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
                         88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
                         88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 89,
                         89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
                         89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
                         89, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                         90, 90, 90, 90, 90, 90, 90, 91, 91, 91, 91, 91, 91, 91,
                         91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
                         91, 91, 91, 91, 91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
                         92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
                         92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 93, 93, 93,
                         93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93,
                         93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 94,
                         94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
                         94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
                         94, 94, 94, 94, 94, 95, 95, 95, 95, 95, 95, 95,
                         95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
                         95, 95, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
                         96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
                         96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
                         96, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
                         97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
                         97, 97, 97, 97, 97, 97, 97, 97, 98, 98, 98, 98, 98, 98,
                         98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
                         98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 99, 99, 99,
                         99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
                         99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 100, 100,
                         100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
                         100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
                         100, 100, 100, 100 }, false);
    }

    public static void main(String[] args) {
        String clazz =
            new Object() {}.getClass().getEnclosingClass().getSimpleName();
        org.junit.runner.JUnitCore.main(clazz);
    }
}
